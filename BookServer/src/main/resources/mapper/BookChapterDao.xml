<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.dao.BookChapterDao">

    <resultMap type="com.server.entity.BookChapter" id="BookChapterMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="bookId" column="book_id" jdbcType="INTEGER"/>
        <result property="chapterId" column="chapter_id" jdbcType="INTEGER"/>
        <result property="chapterName" column="chapter_name" jdbcType="VARCHAR"/>
        <result property="createDate" column="create_date" jdbcType="TIMESTAMP"/>
        <result property="chapterIp" column="chapter_ip" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BookChapterMap">
        select id,
               book_id,
               chapter_id,
               chapter_name,
               create_date,
               chapter_ip
        from book_chapter
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BookChapterMap">
        select
        id, book_id, chapter_id, chapter_name, create_date, chapter_ip
        from book_chapter
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="bookId != null">
                and book_id = #{bookId}
            </if>
            <if test="chapterId != null">
                and chapter_id = #{chapterId}
            </if>
            <if test="chapterName != null and chapterName != ''">
                and chapter_name = #{chapterName}
            </if>
            <if test="createDate != null">
                and create_date = #{createDate}
            </if>
            <if test="chapterIp != null and chapterIp != ''">
                and chapter_ip = #{chapterIp}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from book_chapter
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="bookId != null">
                and book_id = #{bookId}
            </if>
            <if test="chapterId != null">
                and chapter_id = #{chapterId}
            </if>
            <if test="chapterName != null and chapterName != ''">
                and chapter_name = #{chapterName}
            </if>
            <if test="createDate != null">
                and create_date = #{createDate}
            </if>
            <if test="chapterIp != null and chapterIp != ''">
                and chapter_ip = #{chapterIp}
            </if>
        </where>
    </select>
    <!--根据书的id获取所有的章节列表-->
    <select id="queryAllById" resultType="com.server.entity.BookChapter">
        select id,
               book_id,
               chapter_id,
               chapter_name,
               create_date,
               chapter_ip
        from book_chapter
        where book_id = #{bookId}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into book_chapter(book_id, chapter_id, chapter_name, create_date, chapter_ip)
        values (#{bookId}, #{chapterId}, #{chapterName}, #{createDate}, #{chapterIp})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into book_chapter(book_id, chapter_id, chapter_name, create_date, chapter_ip)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.bookId}, #{entity.chapterId}, #{entity.chapterName}, #{entity.createDate}, #{entity.chapterIp})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into book_chapter(book_id, chapter_id, chapter_name, create_date, chapter_ip)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.bookId}, #{entity.chapterId}, #{entity.chapterName}, #{entity.createDate}, #{entity.chapterIp})
        </foreach>
        on duplicate key update
        book_id = values(book_id),
        chapter_id = values(chapter_id),
        chapter_name = values(chapter_name),
        create_date = values(create_date),
        chapter_ip = values(chapter_ip)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update book_chapter
        <set>
            <if test="bookId != null">
                book_id = #{bookId},
            </if>
            <if test="chapterId != null">
                chapter_id = #{chapterId},
            </if>
            <if test="chapterName != null and chapterName != ''">
                chapter_name = #{chapterName},
            </if>
            <if test="createDate != null">
                create_date = #{createDate},
            </if>
            <if test="chapterIp != null and chapterIp != ''">
                chapter_ip = #{chapterIp},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from book_chapter
        where id = #{id}
    </delete>

</mapper>

